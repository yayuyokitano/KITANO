:root {
  font-size: 18px;
}



body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  margin: 0;
  color: var(--primary-text);
}

body.preload *,
body.preload2 * {
  transition-duration: 0ms !important;
  transition: background-color 200ms, color 200ms !important;
}

#popupDiv {
  position: fixed;
  width: 80vw;
  height: 80vh;
  top: 10vh;
  left: 10vw;
  box-sizing: border-box;
  overflow: hidden;
  transition: opacity 200ms;
  display: flex;
}

#popupSetting {
  list-style-type: none;
  margin: 0;
  padding-left: 0;
  background-color: var(--accent-color);
  transition: 400ms;
}

#popupSetting li {
  padding: 0.5rem 1rem;
  cursor: pointer;
  background-color: var(--accent-color);
  color: var(--primary-text);
  transition: 400ms;
  outline: none;
}

#popupSetting li:hover,
#popupSetting li:focus,
#popupSetting .currLi {
  background-color: var(--accent-highlight);
}

#popupContent {
  background-color: var(--primary-background);
  transition: 400ms;
  flex: 1;
  padding-left: 1rem;
}

#popupContent div:not(.display) {
  display: none;
}

.mainContent {
  margin-bottom: 15vh;
  padding: 0 1rem;
  text-align: center;
}

.hidden {
  visibility: hidden;
  opacity: 0;
}

#backgroundDiv {
  background-color: var(--primary-background);
  min-height: 100vh;
  transition: 400ms;
}

#importDeckUpload {
  position: absolute;
  margin-left: -1rem;
  margin-top: -1.2rem;
  width: 100%;
  height: 100vh;
  border: none;
  outline: none;
  cursor: pointer;
  opacity: 0;
}

.faded {
  filter: brightness(0.4);
}

.faded * {
  cursor: default;
}

.mainPageNav {
  background-color: var(--accent-color);
  display: flex;
  transition: 400ms;
}

button,
select {
  border: none;
  font-size: 1rem;
  outline: none;
  background-color: var(--accent-color);
  color: var(--primary-text);
  transition: 400ms;
}

button:not(.disabledBtn),
select {
  cursor: pointer;
}

button:not(.newDeck) {
  border-radius: 0;
  padding: 0.5rem 1rem;
}

select {
  padding: 0.25rem;
}

button:not(.disabledBtn):hover,
button:not(.disabledBtn):focus,
select:hover,
select:focus {
  background-color: var(--accent-highlight)
}

.deckList {
  list-style-type: none;
  padding: 0;
  max-width: 800px;
  margin: 0 auto;
  border-top: 1px solid var(--accent-highlight);
}

.deckLabel {
  overflow: hidden;
  display: inline-block;
  max-width: calc(100% - 120px);
  white-space: nowrap;
}

.deckList li {
  padding: 0 0.3rem;
  line-height: 2;
  margin: 0;
  border-bottom: 1px solid var(--accent-highlight);
  vertical-align: middle;
  overflow: hidden;
  display: flex;
  flex-wrap: wrap;
  align-items: flex-end;
}

.folderElement span {
  display: inline-block;
  text-align: left;
  width: 100%;
}

.folderElement ul {
  width: 100%;
  margin-left: 0;
  padding-left: 0.2rem;
  position: relative;
  left: 0.3rem;
  border-top: 1px solid var(--accent-highlight);
}

.folderElement li:last-child {
  border-bottom: none;
}

.deckList li:not(.folderElement):hover {
  background-color: var(--accent-highlight);
}

a {
  cursor: pointer;
}

.gotoDeck {
  flex-basis: 100%;
  display: flex;
  justify-content: space-between;
  max-width: 100%;
}

.deckBtnList {
  display: none;
}

li:hover>a>.deckBtnList {
  display: flex;
}

.reviewCount {
  display: flex;
}

li:hover .reviewCount {
  display: none;
}

.reviewCount span {
  margin-right: 0.75rem;
  transition: 400ms;
}

.newReview {
  color: var(--new-review);
}

.oldReview {
  color: var(--old-review);
}

.deckBtn {
  background-color: var(--primary-background);
  padding: 0 0.5rem;
  transition: 200ms;
  display: flex;
  align-items: center;
}

svg {
  fill: var(--primary-text);
}

.menuFooter {
  position: fixed;
  bottom: 0;
  display: flex;
  height: 20vh;
  align-items: center;
  justify-content: flex-end;
  width: 100vw;
}

.newDeck {
  width: min(max(min(90px, 15vw, 15vh), 70px), 20vh);
  height: min(max(min(90px, 15vw, 15vh), 70px), 20vh);
  border-radius: 100%;
  background-color: var(--secondary-accent-color);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 0;
  margin-right: 5vw;
}

.newDeck:hover {
  background-color: var(--secondary-accent-highlight);
}

.newDeck svg {
  width: 70%;
  height: 70%;
  fill: var(--secondary-text);
}

.fileUpload {
  height: calc(80vh - 2.5rem);
  cursor: pointer;
}

.fileUpload h1 {
  margin-top: 0;
}

#uploadProgressDiv,
#confirmationDiv {
  background-color: var(--primary-background);
  position: fixed;
  width: 60vw;
  box-sizing: border-box;
  height: auto;
  left: 20vw;
  top: 50vh;
  transform: translateY(-50%);
  padding: 1rem 2rem;
  box-shadow: 0 0 5px var(--accent-color);
  transition: opacity 200ms;
}

#uploadProgressDiv p {
  overflow: hidden;
}

#uploadProgressDiv h3 {
  margin-top: 0;
}

.progressWrapper {
  height: 2rem;
  width: 100%;
  margin: 0 auto;
  background-color: var(--secondary-accent-highlight);
}

.progressVal{
  height: 2rem;
  background-color: var(--secondary-accent-color);
}

.shake {
  animation: shake 400ms;
}

.appearFromTop {
  animation: appearFromTop 400ms;
}

@keyframes shake {
  0% { transform: translate(1px, calc(1px - 50%)) rotate(0deg); }
  10% { transform: translate(-1px, calc(-2px - 50%)) rotate(-1deg); }
  20% { transform: translate(-3px, -50%) rotate(1deg); }
  30% { transform: translate(3px, calc(2px - 50%)) rotate(0deg); }
  40% { transform: translate(1px, calc(-1px - 50%)) rotate(1deg); }
  50% { transform: translate(-1px, calc(2px - 50%)) rotate(-1deg); }
  60% { transform: translate(-3px, calc(1px - 50%)) rotate(0deg); }
  70% { transform: translate(3px, calc(1px - 50%)) rotate(-1deg); }
  80% { transform: translate(-1px, calc(-1px - 50%)) rotate(1deg); }
  90% { transform: translate(1px, calc(2px - 50%)) rotate(0deg); }
  100% { transform: translate(1px, calc(-2px - 50%)) rotate(-1deg); }
}

@keyframes appearFromTop {
  0% {  height: 0; }
  100% { height: 2rem; }
}

@media only screen and (max-width: 650px) {
  #popupDiv {
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
  }
}

@media only screen and (max-width: 500px) {
  .newDeck {
    margin-right: 50%;
    transform: translateX(50%);
  }
}
